object "Contract" {
    // This is the constructor code of the contract.
    code {
        // Deploy the contract
        datacopy(0, dataoffset("runtime"), datasize("runtime"))
        return(0, datasize("runtime"))
    }

    object "runtime" {
        code {
            // // Protection against sending Ether
            // if gt(callvalue(), 0) {
            //     revert(0, 0)
            // }

            // // Dispatcher
            // switch selector()
            // case 0x6d4ce63c {
            //     returnUint(get())
            // }
            // case 0x371303c0 {
            //     inc()
            // }
            // case 0xb3bcfa82 {
            //     dec()
            // }
            // default {
            //     get()
            // }

            returnUint(0x2a)

            // // ABI
            // function get() -> counter {
            //     counter := 0x2a
            // }

            // function inc() {
            //     sstore(counterSlot(), add(get(), 1))
            // }

            // function dec() {
            //     sstore(counterSlot(), sub(get(), 1))
            // }

            // Helpers
            // function selector() -> s {
            //    s := div(calldataload(0), 0x100000000000000000000000000000000000000000000000000000000)
            // }

            function returnUint(v) {
                mstore(0, v)
                return(0, 0x20)
            }

            // // Slots
            // function counterSlot() -> s { s := 0 }
        }
    }
  }